0 program shift 3
1 $ accept 0
2 ; shift 4
3 identifier shift 5
4 . reduce 8
4 constant shift 8
4 var reduce 8
4 begin reduce 8
5 ; reduce 4
5 ( shift 10
6 . shift 11
7 var shift 13
7 begin reduce 12
8 constant-definition shift 14
9 ; reduce 2
10 identifier shift 17
11 $ reduce 1
12 begin shift 19
13 identifier shift 17
14 ; shift 22
15 ) shift 23
16 ) reduce 5
17 ) reduce 23
17 : reduce 23
17 , shift 25
18 . reduce 6
19 ; reduce 31
19 identifier shift 35
19 begin shift 38
19 end reduce 31
19 writeln shift 43
19 readln shift 44
19 repeat-stateexpressionment shift 40
19 while shift 45
19 until reduce 31
19 for shift 46
19 if shift 42
19 else reduce 31
20 ; shift 47
21 : shift 48
22 . reduce 10
22 constant-definition shift 50
22 var reduce 10
22 begin reduce 10
23 ; reduce 3
24 ) reduce 21
24 : reduce 21
25 identifier shift 51
26 end shift 52
27 ; shift 54
27 end reduce 26
27 until reduce 
28 ; reduce 27
28 end reduce 27
28 until reduce 27
28 else reduce 27
29 ; reduce 28
29 end reduce 28
29 until reduce 28
29 else reduce 28
30 ; reduce 29
30 end reduce 29
30 until reduce 29
30 else reduce 29
31 ; reduce 30
31 end reduce 30
31 until reduce 30
31 else reduce 30
32 ; reduce 47
32 end reduce 47
32 until reduce 47
32 else reduce 47
33 ; reduce 48
33 end reduce 48
33 until reduce 48
33 else reduce 48
34 ; reduce 49
34 end reduce 49
34 until reduce 49
34 else reduce 49
35 := shift 55
36 ; reduce 33
36 end reduce 33
36 until reduce 33
36 else reduce 33
37 ; reduce 34
37 end reduce 34
37 until reduce 34
37 else reduce 34
38 ; reduce 31
38 identifier shift 35
38 begin shift 38
38 end reduce 31
38 writeln shift 43
38 readln shift 44
38 repeat-stateexpressionment shift 40
38 while shift 45
38 until reduce 31
38 for shift 46
38 if shift 42
38 else reduce 31
39 ; reduce 51
39 end reduce 51
39 until reduce 51
39 else reduce 51
40 ; reduce 52
40 end reduce 52
40 until reduce 52
40 else reduce 52
41 ; reduce 53
41 end reduce 53
41 until reduce 53
41 else reduce 53
42 identifier reduce 68
42 ( reduce 68
42 string reduce 68
42 number reduce 68
42 + shift 60
42 - shift 61
42 not reduce 68
43 ( shift 62
44 ; reduce 45
44 ( shift 64
44 end reduce 45
44 until reduce 45
44 else reduce 45
45 identifier reduce 68
45 ( reduce 68
45 string reduce 68
45 number reduce 68
45 + shift 60
45 - shift 61
45 not reduce 68
46 identifier shift 66
47 identifier shift 17
47 begin reduce 14
48 integer shift 70
48 real shift 71
48 boolean shift 72
48 string shift 73
49 . reduce 7
49 var reduce 7
49 begin reduce 7
50 ; shift 74
51 ) reduce 23
51 : reduce 23
51 , shift 25
52 . shift 76
53 end reduce 24
53 until reduce 24
54 ; reduce 31
54 identifier shift 35
54 begin shift 38
54 end reduce 31
54 writeln shift 43
54 readln shift 44
54 repeat-stateexpressionment shift 40
54 while shift 45
54 until reduce 31
54 for shift 46
54 if shift 42
54 else reduce 31
55 identifier reduce 68
55 ( reduce 68
55 string reduce 68
55 number reduce 68
55 + shift 60
55 - shift 61
55 not reduce 68
56 end shift 79
57 then shift 80
58 ; reduce 64
58 ) reduce 64
58 end reduce 64
58 do reduce 64
58 until reduce 64
58 to reduce 64
58 downto reduce 64
58 then reduce 64
58 else reduce 64
58 = shift 83
58 <> shift 84
58 < shift 85
58 <= shift 86
58 > shift 87
58 >= shift 88
59 identifier shift 91
59 ( shift 94
59 string shift 93
59 number shift 92
59 not shift 95
60 identifier reduce 66
60 ( reduce 66
60 string reduce 66
60 number reduce 66
60 not reduce 66
61 identifier reduce 67
61 ( reduce 67
61 string reduce 67
61 number reduce 67
61 not reduce 67
62 identifier shift 101
62 ) reduce 37
62 string shift 100
62 number shift 99
63 ; reduce 44
63 end reduce 44
63 until reduce 44
63 else reduce 44
64 identifier shift 17
65 do shift 103
66 := shift 104
67 begin reduce 11
68 ; shift 105
69 ; reduce 15
70 ; reduce 17
71 ; reduce 18
72 ; reduce 19
73 ; reduce 20
74 . reduce 10
74 constant-definition shift 50
74 var reduce 10
74 begin reduce 10
75 ) reduce 22
75 : reduce 22
76 . reduce 16
77 ; shift 54
77 end reduce 26
77 until reduce 26
78 ; reduce 32
78 end reduce 32
78 until reduce 32
78 else reduce 32
79 . shift 108
80 ; reduce 31
80 identifier shift 35
80 begin shift 38
80 end reduce 31
80 writeln shift 43
80 readln shift 44
80 repeat-stateexpressionment shift 40
80 while shift 45
80 until reduce 31
80 for shift 46
80 if shift 42
80 else reduce 31
81 ; reduce 62
81 ) reduce 62
81 end reduce 62
81 do reduce 62
81 until reduce 62
81 to reduce 62
81 downto reduce 62
81 then reduce 62
81 else reduce 62
82 identifier reduce 68
82 ( reduce 68
82 string reduce 68
82 number reduce 68
82 + shift 60
82 - shift 61
82 not reduce 68
83 ; reduce 79
83 identifier reduce 79
83 ( reduce 79
83 ) reduce 79
83 end reduce 79
83 string reduce 79
83 number reduce 79
83 do reduce 79
83 until reduce 79
83 to reduce 79
83 downto reduce 79
83 then reduce 79
83 else reduce 79
83 + reduce 79
83 - reduce 79
83 not reduce 79
84 ; reduce 80
84 identifier reduce 80
84 ( reduce 80
84 ) reduce 80
84 end reduce 80
84 string reduce 80
84 number reduce 80
84 do reduce 80
84 until reduce 80
84 to reduce 80
84 downto reduce 80
84 then reduce 80
84 else reduce 80
84 + reduce 80
84 - reduce 80
84 not reduce 80
85 ; reduce 81
85 identifier reduce 81
85 ( reduce 81
85 ) reduce 81
85 end reduce 81
85 string reduce 81
85 number reduce 81
85 do reduce 81
85 until reduce 81
85 to reduce 81
85 downto reduce 81
85 then reduce 81
85 else reduce 81
85 + reduce 81
85 - reduce 81
85 not reduce 81
86 ; reduce 82
86 identifier reduce 82
86 ( reduce 82
86 ) reduce 82
86 end reduce 82
86 string reduce 82
86 number reduce 82
86 do reduce 82
86 until reduce 82
86 to reduce 82
86 downto reduce 82
86 then reduce 82
86 else reduce 82
86 + reduce 82
86 - reduce 82
86 not reduce 82
87 ; reduce 83
87 identifier reduce 83
87 ( reduce 83
87 ) reduce 83
87 end reduce 83
87 string reduce 83
87 number reduce 83
87 do reduce 83
87 until reduce 83
87 to reduce 83
87 downto reduce 83
87 then reduce 83
87 else reduce 83
87 + reduce 83
87 - reduce 83
87 not reduce 83
88 ; reduce 84
88 identifier reduce 84
88 ( reduce 84
88 ) reduce 84
88 end reduce 84
88 string reduce 84
88 number reduce 84
88 do reduce 84
88 until reduce 84
88 to reduce 84
88 downto reduce 84
88 then reduce 84
88 else reduce 84
88 + reduce 84
88 - reduce 84
88 not reduce 84
89 ; reduce 70
89 ) reduce 70
89 end reduce 70
89 do reduce 70
89 until reduce 70
89 to reduce 70
89 downto reduce 70
89 then reduce 70
89 else reduce 70
89 + shift 113
89 - shift 114
89 = reduce 70
89 <> reduce 70
89 < reduce 70
89 <= reduce 70
89 > reduce 70
89 >= reduce 70
89 or shift 115
90 ; reduce 73
90 ) reduce 73
90 end reduce 73
90 do reduce 73
90 until reduce 73
90 to reduce 73
90 downto reduce 73
90 then reduce 73
90 else reduce 73
90 + reduce 73
90 - reduce 73
90 = reduce 73
90 <> reduce 73
90 < reduce 73
90 <= reduce 73
90 > reduce 73
90 >= reduce 73
90 or reduce 73
90 * shift 118
90 / shift 119
90 div shift 120
90 mod shift 121
90 and shift 122
91 ; reduce 74
91 ) reduce 74
91 end reduce 74
91 do reduce 74
91 until reduce 74
91 to reduce 74
91 downto reduce 74
91 then reduce 74
91 else reduce 74
91 + reduce 74
91 - reduce 74
91 = reduce 74
91 <> reduce 74
91 < reduce 74
91 <= reduce 74
91 > reduce 74
91 >= reduce 74
91 or reduce 74
91 * reduce 74
91 / reduce 74
91 div reduce 74
91 mod reduce 74
91 and reduce 74
92 ; reduce 75
92 ) reduce 75
92 end reduce 75
92 do reduce 75
92 until reduce 75
92 to reduce 75
92 downto reduce 75
92 then reduce 75
92 else reduce 75
92 + reduce 75
92 - reduce 75
92 = reduce 75
92 <> reduce 75
92 < reduce 75
92 <= reduce 75
92 > reduce 75
92 >= reduce 75
92 or reduce 75
92 * reduce 75
92 / reduce 75
92 div reduce 75
92 mod reduce 75
92 and reduce 75
93 ; reduce 76
93 ) reduce 76
93 end reduce 76
93 do reduce 76
93 until reduce 76
93 to reduce 76
93 downto reduce 76
93 then reduce 76
93 else reduce 76
93 + reduce 76
93 - reduce 76
93 = reduce 76
93 <> reduce 76
93 < reduce 76
93 <= reduce 76
93 > reduce 76
93 >= reduce 76
93 or reduce 76
93 * reduce 76
93 / reduce 76
93 div reduce 76
93 mod reduce 76
93 and reduce 76
94 identifier reduce 68
94 ( reduce 68
94 string reduce 68
94 number reduce 68
94 + shift 60
94 - shift 61
94 not reduce 68
95 identifier shift 91
95 ( shift 94
95 string shift 93
95 number shift 92
95 not shift 95
96 ) shift 125
97 ) reduce 36
98 ) reduce 40
98 , shift 127
99 ) reduce 41
99 , reduce 41
100 ) reduce 42
100 , reduce 42
101 ) reduce 43
101 , reduce 43
102 ) shift 128
103 ; reduce 31
103 identifier shift 35
103 begin shift 38
103 end reduce 31
103 writeln shift 43
103 readln shift 44
103 repeat-stateexpressionment shift 40
103 while shift 45
103 until reduce 31
103 for shift 46
103 if shift 42
103 else reduce 31
104 identifier reduce 68
104 ( reduce 68
104 string reduce 68
104 number reduce 68
104 + shift 60
104 - shift 61
104 not reduce 68
105 identifier shift 17
105 begin reduce 14
106 . reduce 9
106 var reduce 9
106 begin reduce 9
107 end reduce 25
107 until reduce 25
108 ; reduce 50
108 end reduce 50
108 until reduce 50
108 else reduce 50
109 ; reduce 61
109 end reduce 61
109 until reduce 61
109 else shift 133
110 ; reduce 63
110 ) reduce 63
110 end reduce 63
110 do reduce 63
110 until reduce 63
110 to reduce 63
110 downto reduce 63
110 then reduce 63
110 else reduce 63
111 ; reduce 65
111 ) reduce 65
111 end reduce 65
111 do reduce 65
111 until reduce 65
111 to reduce 65
111 downto reduce 65
111 then reduce 65
111 else reduce 65
111 = reduce 65
111 <> reduce 65
111 < reduce 65
111 <= reduce 65
111 > reduce 65
111 >= reduce 65
112 identifier shift 91
112 ( shift 94
112 string shift 93
112 number shift 92
112 not shift 95
113 identifier reduce 85
113 ( reduce 85
113 string reduce 85
113 number reduce 85
113 not reduce 85
114 identifier reduce 86
114 ( reduce 86
114 string reduce 86
114 number reduce 86
114 not reduce 86
115 identifier reduce 87
115 ( reduce 87
115 string reduce 87
115 number reduce 87
115 not reduce 87
116 ; reduce 71
116 ) reduce 71
116 end reduce 71
116 do reduce 71
116 until reduce 71
116 to reduce 71
116 downto reduce 71
116 then reduce 71
116 else reduce 71
116 + reduce 71
116 - reduce 71
116 = reduce 71
116 <> reduce 71
116 < reduce 71
116 <= reduce 71
116 > reduce 71
116 >= reduce 71
116 or reduce 71
117 identifier shift 91
117 ( shift 94
117 string shift 93
117 number shift 92
117 not shift 95
118 identifier reduce 88
118 ( reduce 88
118 string reduce 88
118 number reduce 88
118 not reduce 88
119 identifier reduce 89
119 ( reduce 89
119 string reduce 89
119 number reduce 89
119 not reduce 89
120 identifier reduce 90
120 ( reduce 90
120 string reduce 90
120 number reduce 90
120 not reduce 90
121 identifier reduce 91
121 ( reduce 91
121 string reduce 91
121 number reduce 91
121 not reduce 91
122 identifier reduce 92
122 ( reduce 92
122 string reduce 92
122 number reduce 92
122 not reduce 92
123 ) shift 136
124 ; reduce 78
124 ) reduce 78
124 end reduce 78
124 do reduce 78
124 until reduce 78
124 to reduce 78
124 downto reduce 78
124 then reduce 78
124 else reduce 78
124 + reduce 78
124 - reduce 78
124 = reduce 78
124 <> reduce 78
124 < reduce 78
124 <= reduce 78
124 > reduce 78
124 >= reduce 78
124 or reduce 78
124 * reduce 78
124 / reduce 78
124 div reduce 78
124 mod reduce 78
124 and reduce 78
125 ; reduce 35
125 end reduce 35
125 until reduce 35
125 else reduce 35
126 ) reduce 38
127 identifier shift 101
127 string shift 100
127 number shift 99
128 ; reduce 46
128 end reduce 46
128 until reduce 46
128 else reduce 46
129 ; reduce 54
129 end reduce 54
129 until reduce 54
129 else reduce 54
130 to shift 139
130 downto shift 140
131 begin reduce 13
132 ; reduce 59
132 end reduce 59
132 until reduce 59
132 else reduce 59
133 ; reduce 31
133 identifier shift 35
133 begin shift 38
133 end reduce 31
133 writeln shift 43
133 readln shift 44
133 repeat-stateexpressionment shift 40
133 while shift 45
133 until reduce 31
133 for shift 46
133 if shift 42
133 else reduce 31
134 ; reduce 70
134 ) reduce 70
134 end reduce 70
134 do reduce 70
134 until reduce 70
134 to reduce 70
134 downto reduce 70
134 then reduce 70
134 else reduce 70
134 + shift 113
134 - shift 114
134 = reduce 70
134 <> reduce 70
134 < reduce 70
134 <= reduce 70
134 > reduce 70
134 >= reduce 70
134 or shift 115
135 ; reduce 73
135 ) reduce 73
135 end reduce 73
135 do reduce 73
135 until reduce 73
135 to reduce 73
135 downto reduce 73
135 then reduce 73
135 else reduce 73
135 + reduce 73
135 - reduce 73
135 = reduce 73
135 <> reduce 73
135 < reduce 73
135 <= reduce 73
135 > reduce 73
135 >= reduce 73
135 or reduce 73
135 * shift 118
135 / shift 119
135 div shift 120
135 mod shift 121
135 and shift 122
136 ; reduce 77
136 ) reduce 77
136 end reduce 77
136 do reduce 77
136 until reduce 77
136 to reduce 77
136 downto reduce 77
136 then reduce 77
136 else reduce 77
136 + reduce 77
136 - reduce 77
136 = reduce 77
136 <> reduce 77
136 < reduce 77
136 <= reduce 77
136 > reduce 77
136 >= reduce 77
136 or reduce 77
136 * reduce 77
136 / reduce 77
136 div reduce 77
136 mod reduce 77
136 and reduce 77
137 ) reduce 40
137 , shift 127
138 identifier reduce 68
138 ( reduce 68
138 string reduce 68
138 number reduce 68
138 + shift 60
138 - shift 61
138 not reduce 68
139 ; reduce 57
139 identifier reduce 57
139 ( reduce 57
139 end reduce 57
139 string reduce 57
139 number reduce 57
139 do reduce 57
139 until reduce 57
139 else reduce 57
139 + reduce 57
139 - reduce 57
139 not reduce 57
139 = reduce 57
139 <> reduce 57
139 < reduce 57
139 <= reduce 57
139 > reduce 57
139 >= reduce 57
140 ; reduce 58
140 identifier reduce 58
140 ( reduce 58
140 end reduce 58
140 string reduce 58
140 number reduce 58
140 do reduce 58
140 until reduce 58
140 else reduce 58
140 + reduce 58
140 - reduce 58
140 not reduce 58
140 = reduce 58
140 <> reduce 58
140 < reduce 58
140 <= reduce 58
140 > reduce 58
140 >= reduce 58
141 ; reduce 60
141 end reduce 60
141 until reduce 60
141 else reduce 60
142 ; reduce 69
142 ) reduce 69
142 end reduce 69
142 do reduce 69
142 until reduce 69
142 to reduce 69
142 downto reduce 69
142 then reduce 69
142 else reduce 69
142 = reduce 69
142 <> reduce 69
142 < reduce 69
142 <= reduce 69
142 > reduce 69
142 >= reduce 69
143 ; reduce 72
143 ) reduce 72
143 end reduce 72
143 do reduce 72
143 until reduce 72
143 to reduce 72
143 downto reduce 72
143 then reduce 72
143 else reduce 72
143 + reduce 72
143 - reduce 72
143 = reduce 72
143 <> reduce 72
143 < reduce 72
143 <= reduce 72
143 > reduce 72
143 >= reduce 72
143 or reduce 72
144 ) reduce 39
145 do shift 146
146 ; reduce 31
146 identifier shift 35
146 begin shift 38
146 end reduce 31
146 writeln shift 43
146 readln shift 44
146 repeat-stateexpressionment shift 40
146 while shift 45
146 until reduce 31
146 for shift 46
146 if shift 42
146 else reduce 31
147 ; reduce 56
147 end reduce 56
147 until reduce 56
147 else reduce 56