0 program shift 3
1 $ accept 0
2 ; shift 4
3 identifier shift 5
4 . reduce 8
4 constant shift 8
4 var reduce 8
4 begin reduce 8
5 ; reduce 4
5 ( shift 10
6 . shift 11
7 var shift 13
7 begin reduce 12
8 constant-definition shift 14
9 ; reduce 2
10 identifier shift 17
11 $ reduce 1
12 begin shift 19
13 identifier shift 17
14 ; shift 22
15 ) shift 23
16 ) reduce 5
17 ) reduce 23
17 : reduce 23
17 , shift 25
18 . reduce 6
19 ; reduce 31
19 identifier shift 35
19 begin shift 38
19 end reduce 31
19 writeln shift 43
19 readln shift 44
19 repeat-stateexpressionment shift 40
19 while shift 45
19 until reduce 31
19 for shift 46
19 if shift 42
19 else reduce 31
20 ; shift 47
21 : shift 48
22 . reduce 10
22 constant-definition shift 50
22 var reduce 10
22 begin reduce 10
23 ; reduce 3
24 ) reduce 21
24 : reduce 21
25 identifier shift 51
26 end shift 52
27 ; shift 54
27 end reduce 26
27 until reduce 
28 ; reduce 27
28 end reduce 27
28 until reduce 27
28 else reduce 27
29 ; reduce 28
29 end reduce 28
29 until reduce 28
29 else reduce 28
30 ; reduce 29
30 end reduce 29
30 until reduce 29
30 else reduce 29
31 ; reduce 30
31 end reduce 30
31 until reduce 30
31 else reduce 30
32 ; reduce 47
32 end reduce 47
32 until reduce 47
32 else reduce 47
33 ; reduce 48
33 end reduce 48
33 until reduce 48
33 else reduce 48
34 ; reduce 49
34 end reduce 49
34 until reduce 49
34 else reduce 49
35 := shift 55
36 ; reduce 33
36 end reduce 33
36 until reduce 33
36 else reduce 33
37 ; reduce 34
37 end reduce 34
37 until reduce 34
37 else reduce 34
38 ; reduce 31
38 identifier shift 35
38 begin shift 38
38 end reduce 31
38 writeln shift 43
38 readln shift 44
38 repeat-stateexpressionment shift 40
38 while shift 45
38 until reduce 31
38 for shift 46
38 if shift 42
38 else reduce 31
39 ; reduce 51
39 end reduce 51
39 until reduce 51
39 else reduce 51
40 ; reduce 52
40 end reduce 52
40 until reduce 52
40 else reduce 52
41 ; reduce 53
41 end reduce 53
41 until reduce 53
41 else reduce 53
42 identifier reduce 68
42 ( reduce 68
42 string reduce 68
42 number reduce 68
42 + shift 60
42 - shift 61
42 not reduce 68
43 ( shift 62
44 ; reduce 45
44 ( shift 64
44 end reduce 45
44 until reduce 45
44 else reduce 45
45 identifier reduce 68
45 ( reduce 68
45 string reduce 68
45 number reduce 68
45 + shift 60
45 - shift 61
45 not reduce 68
46 identifier shift 66
47 identifier shift 17
47 begin reduce 14
48 integer shift 70
48 real shift 71
48 boolean shift 72
48 string shift 73
49 . reduce 7
49 var reduce 7
49 begin reduce 7
50 ; shift 74
51 ) reduce 23
51 : reduce 23
51 , shift 25
